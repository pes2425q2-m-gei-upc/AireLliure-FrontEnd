name: CI-CD
on:
  push:
    branches: [main, feature/CI-CD]
  pull_request:
    branches: [main, feature/CI-CD]

jobs:
  lint:
    name: Run Linters
    runs-on: ubuntu-latest
    env:
        MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3   # instala sdkmanager y el SDK en $ANDROID_SDK_ROOT

      - name: Generate local.properties
        run: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Run Detekt
        run: ./gradlew detekt

      - name: Run Android Lint
        run: ./gradlew lint

  test:
    name: Run Unit Tests and Coverage
    runs-on: ubuntu-latest
    #needs: lint
    env:
      MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Generate local.properties
        run: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper/
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Clean project
        run: ./gradlew clean

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest --no-build-cache --rerun-tasks

      - name: Generate coverage report
        run: ./gradlew jacocoTestReport

      - name: Check for .exec file
        run: find . -name "*.exec"

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml

      - name: List Jacoco output
        run: ls -la app/build/reports/jacoco/jacocoTestReport

  sonarcloud:
    name: Analyze with SonarCloud
    runs-on: ubuntu-latest
    needs: test
    if: ${{ success() }}

    env:
      MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Generate local.properties
        run: echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.projectKey=YOUR_PROJECT_KEY
            -Dsonar.organization=YOUR_ORG_KEY
            -Dsonar.coverage.jacoco.xmlReportPaths=app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml